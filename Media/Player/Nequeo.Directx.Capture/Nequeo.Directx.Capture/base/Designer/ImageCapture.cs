// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.Directx
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    
    #region ImageCapture Extension Type
    /// <summary>
    /// The ImageCapture object class.
    /// </summary>
    public partial class ImageCapture
    {
        private Exception _exceptionImageCapture = null;
		private ImageCaptureThread _threadImageCaptureContext = null;

		/// <summary>
        /// Gets the current async exception; else null;
        /// </summary>
        public Exception ExceptionImageCapture
        {
            get { return _exceptionImageCapture; }
        }

		/// <summary>
        /// Gets the ImageCapture threading context.
        /// </summary>
        public ImageCaptureThread ImageCaptureThreadContext
        {
            get { return _threadImageCaptureContext; }
        }

		/// <summary>
        /// On create.
        /// </summary>
        partial void OnCreated();

		/// <summary>
        /// On create instance of ImageCapture
        /// </summary>
		partial void OnCreated()
		{
			// Start the async control.
			_threadImageCaptureContext = new ImageCaptureThread(this);
			_threadImageCaptureContext.AsyncError += new Nequeo.Threading.EventHandler<Exception>(_asyncAccount_AsyncError);
		}

		/// <summary>
        /// Async error
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e1"></param>
        private void _asyncAccount_AsyncError(object sender, Exception e1)
        {
            _exceptionImageCapture = e1;
        }

		/// <summary>
        /// ImageCapture threading handler.
        /// </summary>
        public class ImageCaptureThread : Nequeo.Threading.AsyncExecutionHandler<ImageCapture>
        {
            /// <summary>
            /// ImageCapture threading handler.
            /// </summary>
            /// <param name="service">The ImageCapture type.</param>
            public ImageCaptureThread(ImageCapture service)
                : base(service) { }
        }
    }
    #endregion
}

#pragma warning restore 169
